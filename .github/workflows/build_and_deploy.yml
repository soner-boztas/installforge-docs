name: Build and Deploy Workflow

on:
  push:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages.
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Set up Poetry environment
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Set up Pages
      id: pages
      uses: actions/configure-pages@v5
    - name: Perform post-processing
      run: |
        sed -i "s/\[Year\]/$(date '+%Y')/" mkdocs.yml
        sed -i "s/\[Date\]/$(date '+%Y-%m-%d')/" mkdocs.yml
        sed -i "s/\[CommitHash\]/$(printf %.7s $GITHUB_SHA)/" mkdocs.yml
        sed -i "s/\[Branch\]/$GITHUB_REF_NAME/" mkdocs.yml
    - name: Build docs
      run: poetry run poe docs build
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site

  Deploy:
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
